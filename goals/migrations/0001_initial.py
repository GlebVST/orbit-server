# -*- coding: utf-8 -*-
# Generated by Django 1.11.14 on 2018-08-07 07:07
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0126_auto_20180802_2324'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseGoal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='GoalType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserGoal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(choices=[(0, 'Past Due'), (1, 'In Progress'), (2, 'Completed')])),
                ('dueDate', models.DateTimeField()),
                ('completeDate', models.DateTimeField(blank=True, help_text='Date the goal was completed', null=True)),
                ('creditsDue', models.DecimalField(blank=True, decimal_places=2, help_text='Used for CMEGoals', max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('cmeTag', models.ForeignKey(blank=True, help_text='Used with CmeGoal', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='usergoals', to='users.CmeTag')),
                ('documents', models.ManyToManyField(related_name='usergoals', to='users.Document')),
            ],
        ),
        migrations.CreateModel(
            name='CmeGoal',
            fields=[
                ('goal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='cmegoal', serialize=False, to='goals.BaseGoal')),
                ('entityType', models.IntegerField(choices=[(0, 'Board'), (1, 'State'), (2, 'Hospital')], help_text='Entity source. Then select the entity from the appropriate dropdown menu.')),
                ('credits', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0.1)])),
                ('dueDateType', models.IntegerField(choices=[(0, 'One-off. Due immediately'), (1, 'Recurring at set interval. Due on fixed MM/DD'), (2, 'Recurring at set interval. Due at any time counting back over interval'), (3, 'Recurring at set interval. Due on user birth date'), (4, 'Recurring at set interval. Due on license expiration date')])),
                ('interval', models.DecimalField(blank=True, decimal_places=5, help_text='Interval in years for recurring dueDateType', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0.00274)])),
                ('dueMonth', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('dueDay', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('board', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cmegoals', to='goals.Board')),
                ('cmeTag', models.ForeignKey(blank=True, help_text="Null value means the tag will be selected from the user's specialty", null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cmegoals', to='users.CmeTag')),
                ('hospital', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cmegoals', to='users.Hospital')),
            ],
        ),
        migrations.CreateModel(
            name='LicenseGoal',
            fields=[
                ('title', models.CharField(blank=True, help_text='Title of goal', max_length=100)),
                ('goal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='licensegoal', serialize=False, to='goals.BaseGoal')),
                ('interval', models.DecimalField(decimal_places=2, help_text='License interval in years', max_digits=4, validators=[django.core.validators.MinValueValidator(0.1)])),
                ('licenseType', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='licensegoals', to='users.LicenseType')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='licensegoals', to='users.State')),
            ],
        ),
        migrations.CreateModel(
            name='WellnessGoal',
            fields=[
                ('goal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='wellnessgoal', serialize=False, to='goals.BaseGoal')),
                ('title', models.CharField(help_text='Title of goal e.g. Annual Flu Shot', max_length=100)),
                ('dueDateType', models.IntegerField(choices=[(0, 'One-off. Due immediately'), (1, 'Recurring at set interval. Due on fixed MM/DD'), (3, 'Recurring at set interval. Due on user birth date')])),
                ('interval', models.DecimalField(decimal_places=5, help_text='Interval in years', max_digits=7, validators=[django.core.validators.MinValueValidator(0)])),
                ('dueMonth', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('dueDay', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='wellnessgoals', to='users.Hospital')),
            ],
        ),
        migrations.AddField(
            model_name='usergoal',
            name='goal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usergoals', to='goals.BaseGoal'),
        ),
        migrations.AddField(
            model_name='usergoal',
            name='license',
            field=models.ForeignKey(blank=True, help_text='Used for license goals', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usergoals', to='users.StateLicense'),
        ),
        migrations.AddField(
            model_name='usergoal',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usergoals', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='basegoal',
            name='degrees',
            field=models.ManyToManyField(blank=True, help_text='Applicable primary roles. No selection means any', to='users.Degree'),
        ),
        migrations.AddField(
            model_name='basegoal',
            name='goalType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='goals.GoalType'),
        ),
        migrations.AddField(
            model_name='basegoal',
            name='modifiedBy',
            field=models.ForeignKey(blank=True, help_text='User who last modified this goal', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='basegoals', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='basegoal',
            name='specialties',
            field=models.ManyToManyField(blank=True, help_text='Applicable specialties. No selection means any', to='users.PracticeSpecialty'),
        ),
        migrations.AddField(
            model_name='usergoal',
            name='cmeGoals',
            field=models.ManyToManyField(related_name='usercmegoals', to='goals.CmeGoal'),
        ),
        migrations.AddField(
            model_name='cmegoal',
            name='licenseGoal',
            field=models.ForeignKey(blank=True, help_text='Must be set if dueDate uses license expiration date. Null otherwise.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cmegoals', to='goals.LicenseGoal'),
        ),
        migrations.AddField(
            model_name='cmegoal',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cmegoals', to='users.State'),
        ),
        migrations.AlterUniqueTogether(
            name='usergoal',
            unique_together=set([('user', 'goal', 'dueDate')]),
        ),
        migrations.AlterUniqueTogether(
            name='licensegoal',
            unique_together=set([('state', 'licenseType', 'title')]),
        ),
    ]
