# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-29 20:27
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0021_document_is_certificate'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllowedHost',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('hostname', models.CharField(help_text='netloc only. No scheme', max_length=100, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'trackers_allowedhost',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AllowedUrl',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('url', models.URLField(max_length=500, unique=True)),
                ('valid', models.BooleanField(default=True)),
                ('page_title', models.TextField(blank=True)),
                ('doi', models.CharField(blank=True, help_text='Digital Object Identifier e.g. 10.1371/journal.pmed.1002234', max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'trackers_allowedurl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestedUrl',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('url', models.URLField(max_length=500, unique=True)),
                ('valid', models.NullBooleanField(default=None)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'trackers_requestedurl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WhitelistRequest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'trackers_whitelistrequest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuditReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referenceId', models.CharField(blank=True, default=None, help_text='alphanum unique key generated from the pk', max_length=64, null=True, unique=True)),
                ('name', models.CharField(help_text='Name/title of the report', max_length=255)),
                ('startDate', models.DateTimeField()),
                ('endDate', models.DateTimeField()),
                ('saCredits', models.DecimalField(decimal_places=2, help_text='Calculated number of SA-CME credits', max_digits=6)),
                ('otherCredits', models.DecimalField(decimal_places=2, help_text='Calculated number of other credits', max_digits=6)),
                ('document', models.FileField(upload_to=users.models.audit_report_document_path)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('certificate', models.ForeignKey(help_text='BrowserCme Certificate generated for the same date range', on_delete=django.db.models.deletion.PROTECT, to='users.Certificate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
