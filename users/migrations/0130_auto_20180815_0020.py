# -*- coding: utf-8 -*-
# Generated by Django 1.11.14 on 2018-08-15 00:20
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0129_recallowedurl'),
    ]

    operations = [
        migrations.CreateModel(
            name='OrgMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(db_index=True, help_text='Uppercase first and last name for search', max_length=100)),
                ('is_admin', models.BooleanField(db_index=True, default=False, help_text='True if user is an admin for this organization')),
                ('removeDate', models.DateTimeField(blank=True, help_text='date the member was removed', null=True)),
                ('compliance', models.PositiveSmallIntegerField(default=1, help_text='Cached value of compliance status for sorting')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orgmembers', to='users.Organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orgmembers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Enterprise Members',
            },
        ),
        migrations.AlterField(
            model_name='subscriptionplantype',
            name='needs_payment_method',
            field=models.BooleanField(default=False, help_text='If true: requires payment method on signup to create a UserSubscription.'),
        ),
        migrations.AlterUniqueTogether(
            name='orgmember',
            unique_together=set([('organization', 'user')]),
        ),
    ]
