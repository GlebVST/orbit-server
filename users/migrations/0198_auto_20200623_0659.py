# -*- coding: utf-8 -*-
# Generated by Django 1.11.21 on 2020-06-23 06:59
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0197_practicespecialty_gsearchengid'),
    ]

    operations = [
        migrations.CreateModel(
            name='InfluencerGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Influencer group name.', max_length=80, unique=True)),
                ('twitter_handle', models.CharField(blank=True, default='', help_text="Twitter handle (including the '@').", max_length=20)),
                ('tweet_template', models.TextField(blank=True, default='', help_text='Tweet template. Template variables must be valid/be recognized by client/server code.')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='InfluencerGroupManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='InfluencerMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.InfluencerGroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['group', '-created'],
            },
        ),
        migrations.AddField(
            model_name='influencergroup',
            name='users',
            field=models.ManyToManyField(blank=True, help_text='Users assigned to this group', related_name='influencer_groups', through='users.InfluencerMembership', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='influencermembership',
            unique_together=set([('group', 'user')]),
        ),
    ]
