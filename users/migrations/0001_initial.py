# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-12-09 22:45
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BrowserCmeOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activityDate', models.DateTimeField()),
                ('url', models.URLField(max_length=500)),
                ('pageTitle', models.TextField(blank=True)),
                ('expireDate', models.DateTimeField()),
                ('redeemed', models.BooleanField(default=False)),
                ('points', models.DecimalField(decimal_places=2, help_text='Points needed to redeem this offer', max_digits=6)),
                ('credits', models.DecimalField(decimal_places=2, help_text='CME credits to be awarded upon redemption', max_digits=5)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'BrowserCME Offers',
            },
        ),
        migrations.CreateModel(
            name='CmeTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'CME Tags',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('customerId', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Used for Braintree customerId', unique=True)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abbrev', models.CharField(max_length=5, unique=True)),
                ('name', models.CharField(max_length=40)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activityDate', models.DateTimeField()),
                ('description', models.CharField(max_length=500)),
                ('valid', models.BooleanField(default=True)),
                ('document', models.FileField(blank=True, null=True, upload_to='entries')),
                ('md5sum', models.CharField(blank=True, help_text='md5sum of the document file', max_length=32)),
                ('content_type', models.CharField(blank=True, help_text='content_type of the document file', max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Entries',
            },
        ),
        migrations.CreateModel(
            name='EntryType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PointPurchaseOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.DecimalField(decimal_places=2, max_digits=6)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PointRewardOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.DecimalField(decimal_places=2, max_digits=6)),
                ('rewardType', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PointTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.DecimalField(decimal_places=2, max_digits=6)),
                ('pricePaid', models.DecimalField(decimal_places=2, max_digits=6)),
                ('transactionId', models.CharField(max_length=36, unique=True)),
                ('valid', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='PracticeSpecialty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Practice Specialties',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('firstName', models.CharField(max_length=30)),
                ('lastName', models.CharField(max_length=30)),
                ('contactEmail', models.EmailField(blank=True, max_length=254)),
                ('jobTitle', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True, help_text='About me')),
                ('npiNumber', models.CharField(blank=True, help_text='Professional ID', max_length=20)),
                ('inviteId', models.CharField(max_length=12, unique=True)),
                ('socialUrl', models.URLField(blank=True)),
                ('isComplete', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('cmeTags', models.ManyToManyField(related_name='profiles', to='users.CmeTag')),
                ('country', models.ForeignKey(blank=True, help_text='Primary country of practice', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='profiles', to='users.Country')),
                ('degrees', models.ManyToManyField(to='users.Degree')),
                ('specialties', models.ManyToManyField(to='users.PracticeSpecialty')),
            ],
        ),
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=500)),
                ('hasBias', models.BooleanField(default=False)),
                ('hasUnfairContent', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Feedback',
            },
        ),
        migrations.CreateModel(
            name='BrowserCme',
            fields=[
                ('entry', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='brcme', serialize=False, to='users.Entry')),
                ('credits', models.DecimalField(decimal_places=2, max_digits=5)),
                ('url', models.URLField(max_length=500)),
                ('pageTitle', models.TextField()),
                ('purpose', models.IntegerField(choices=[(0, 'DX'), (1, 'TX')], default=0, help_text='DX = Diagnosis. TX = Treatment')),
                ('planEffect', models.IntegerField(choices=[(0, 'No change'), (1, 'Change')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ExBrowserCme',
            fields=[
                ('entry', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='exbrcme', serialize=False, to='users.Entry')),
                ('url', models.URLField(max_length=500)),
                ('pageTitle', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('entry', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='reward', serialize=False, to='users.Entry')),
                ('rewardType', models.CharField(max_length=30)),
                ('points', models.DecimalField(decimal_places=2, max_digits=6)),
            ],
        ),
        migrations.CreateModel(
            name='SRCme',
            fields=[
                ('entry', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='srcme', serialize=False, to='users.Entry')),
                ('credits', models.DecimalField(decimal_places=2, max_digits=6)),
            ],
        ),
        migrations.AddField(
            model_name='pointtransaction',
            name='entry',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='users.Entry'),
        ),
        migrations.AddField(
            model_name='entry',
            name='entryType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.EntryType'),
        ),
        migrations.AddField(
            model_name='entry',
            name='tags',
            field=models.ManyToManyField(related_name='entries', to='users.CmeTag'),
        ),
        migrations.AddField(
            model_name='entry',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='browsercmeoffer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='exbrowsercme',
            name='offer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='exbrcme', to='users.BrowserCmeOffer'),
        ),
        migrations.AddField(
            model_name='browsercme',
            name='offer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='brcme', to='users.BrowserCmeOffer'),
        ),
    ]
